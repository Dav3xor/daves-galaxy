# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import newdominion.dominion.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(max_length=50)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('event', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Fleet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('sensorrange', models.FloatField(default=0, null=True, editable=False)),
                ('society', models.PositiveIntegerField(default=0)),
                ('age', models.PositiveIntegerField(default=0)),
                ('disposition', models.PositiveIntegerField(default=0, choices=[(0, b'Garrison'), (1, b'Planetary Defense'), (2, b'Scout'), (3, b'Screen'), (4, b'Diplomacy'), (5, b'Attack'), (6, b'Colonize'), (7, b'Patrol'), (8, b'Trade'), (9, b'Piracy'), (10, b'Planetary Assault'), (11, b'Helium Harvesting'), (12, b'Long Haul Trade')])),
                ('speed', models.FloatField(default=0, editable=False)),
                ('direction', models.FloatField(default=0, editable=False)),
                ('damaged', models.BooleanField(default=False, editable=False)),
                ('destroyed', models.BooleanField(default=False, editable=False)),
                ('pirated', models.PositiveIntegerField(default=0)),
                ('x', models.FloatField(default=0, editable=False)),
                ('y', models.FloatField(default=0, editable=False)),
                ('curleg', models.PositiveIntegerField(default=0)),
                ('routeoffsetx', models.FloatField(default=0)),
                ('routeoffsety', models.FloatField(default=0)),
                ('dx', models.FloatField(default=0, editable=False)),
                ('dy', models.FloatField(default=0, editable=False)),
                ('scouts', models.PositiveIntegerField(default=0)),
                ('blackbirds', models.PositiveIntegerField(default=0)),
                ('subspacers', models.PositiveIntegerField(default=0)),
                ('arcs', models.PositiveIntegerField(default=0)),
                ('merchantmen', models.PositiveIntegerField(default=0)),
                ('bulkfreighters', models.PositiveIntegerField(default=0)),
                ('longhaulmerchants', models.PositiveIntegerField(default=0)),
                ('harvesters', models.PositiveIntegerField(default=0)),
                ('fighters', models.PositiveIntegerField(default=0)),
                ('frigates', models.PositiveIntegerField(default=0)),
                ('destroyers', models.PositiveIntegerField(default=0)),
                ('cruisers', models.PositiveIntegerField(default=0)),
                ('battleships', models.PositiveIntegerField(default=0)),
                ('superbattleships', models.PositiveIntegerField(default=0)),
                ('carriers', models.PositiveIntegerField(default=0)),
            ],
            bases=(models.Model, newdominion.dominion.models.Populated),
        ),
        migrations.CreateModel(
            name='FleetAttribute',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('attribute', models.CharField(max_length=50)),
                ('value', models.TextField()),
                ('fleet', models.ForeignKey(to='dominion.Fleet')),
            ],
        ),
        migrations.CreateModel(
            name='FleetUserView',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('seesubs', models.BooleanField(default=False)),
                ('fleet', models.ForeignKey(related_name='inviewof', to='dominion.Fleet')),
                ('user', models.ForeignKey(related_name='inviewfleets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Instrumentality',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.TextField()),
                ('name', models.CharField(max_length=50)),
                ('type', models.PositiveIntegerField(default=0, choices=[(b'0', b'Sensors 1'), (b'1', b'Sensors 2'), (b'2', b'Trade Incentives'), (b'3', b'Regional Government'), (b'4', b'Mind Control'), (b'5', b'Matter Synthesizer 1'), (b'6', b'Matter Synthesizer 2'), (b'7', b'Military Base'), (b'8', b'Slingshot'), (b'9', b'Farm Subsidies'), (b'10', b'Drilling Subsidies'), (b'11', b'Planetary Defense'), (b'12', b'Petrochemical Power Plant'), (b'13', b'Fusion Power Plant'), (b'14', b'Antimatter Power Plant')])),
                ('minsociety', models.PositiveIntegerField(default=0)),
                ('upkeep', models.FloatField(default=0.0)),
                ('minupkeep', models.PositiveIntegerField(default=0)),
                ('minenergy', models.FloatField(default=0)),
                ('energypercapita', models.FloatField(default=0)),
                ('priority', models.PositiveIntegerField(default=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Manifest',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('people', models.PositiveIntegerField(default=0)),
                ('food', models.PositiveIntegerField(default=0)),
                ('consumergoods', models.PositiveIntegerField(default=0)),
                ('steel', models.PositiveIntegerField(default=0)),
                ('krellmetal', models.PositiveIntegerField(default=0)),
                ('unobtanium', models.PositiveIntegerField(default=0)),
                ('antimatter', models.PositiveIntegerField(default=0)),
                ('hydrocarbon', models.PositiveIntegerField(default=0)),
                ('helium3', models.PositiveIntegerField(default=0)),
                ('strangeness', models.PositiveIntegerField(default=0)),
                ('charm', models.PositiveIntegerField(default=0)),
                ('quatloos', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subject', models.CharField(max_length=80)),
                ('message', models.TextField()),
                ('fromplayer', models.ForeignKey(related_name='from_player', to=settings.AUTH_USER_MODEL)),
                ('replyto', models.ForeignKey(related_name='reply_to', to='dominion.Message', null=True)),
                ('toplayer', models.ForeignKey(related_name='to_player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, verbose_name=b'Planet Name')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('r', models.FloatField()),
                ('color', models.PositiveIntegerField()),
                ('society', models.PositiveIntegerField()),
                ('sensorrange', models.FloatField(default=0, null=True)),
                ('tariffrate', models.FloatField(default=0, verbose_name=b'External Tariff Rate')),
                ('inctaxrate', models.FloatField(default=0, verbose_name=b'Income Tax Rate')),
                ('damaged', models.BooleanField(default=False)),
                ('openshipyard', models.BooleanField(default=False, verbose_name=b'Allow Others to Build Ships')),
                ('opencommodities', models.BooleanField(default=False, verbose_name=b'Allow Trading of Rare Commodities')),
                ('opentrade', models.BooleanField(default=False, verbose_name=b'Allow Others to Trade Here')),
                ('innebulae', models.BooleanField(default=False)),
                ('consumedenergy', models.PositiveIntegerField(default=0)),
            ],
            bases=(models.Model, newdominion.dominion.models.Populated),
        ),
        migrations.CreateModel(
            name='PlanetAttribute',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('attribute', models.CharField(max_length=50)),
                ('value', models.TextField()),
                ('planet', models.ForeignKey(to='dominion.Planet')),
            ],
        ),
        migrations.CreateModel(
            name='PlanetConnection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('planeta', models.ForeignKey(related_name='planeta', to='dominion.Planet')),
                ('planetb', models.ForeignKey(related_name='planetb', to='dominion.Planet')),
            ],
        ),
        migrations.CreateModel(
            name='PlanetHistory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('day', models.DateTimeField(auto_now_add=True)),
                ('sensorrange', models.FloatField(default=0, null=True)),
                ('tariffrate', models.FloatField(default=0, verbose_name=b'External Tariff Rate')),
                ('inctaxrate', models.FloatField(default=0, verbose_name=b'Income Tax Rate')),
                ('damaged', models.BooleanField(default=False)),
                ('inport', models.IntegerField(default=0)),
                ('energyproduced', models.IntegerField(default=0)),
                ('energyconsumed', models.IntegerField(default=0)),
                ('planet', models.ForeignKey(to='dominion.Planet', null=True)),
                ('prices', models.ForeignKey(related_name='pricehistory', to='dominion.Manifest', null=True)),
                ('surplus', models.ForeignKey(related_name='surplushistory', to='dominion.Manifest', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanetUpgrade',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('state', models.PositiveIntegerField(default=0)),
                ('instrumentality', models.ForeignKey(to='dominion.Instrumentality')),
                ('planet', models.ForeignKey(to='dominion.Planet')),
                ('raised', models.ForeignKey(to='dominion.Manifest')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('lastactivity', models.DateTimeField()),
                ('lastreset', models.DateTimeField()),
                ('color', models.CharField(max_length=15)),
                ('appearance', models.TextField(blank=True)),
                ('racename', models.CharField(max_length=30, verbose_name=b'Race', blank=True)),
                ('rulername', models.CharField(max_length=30, verbose_name=b'Head of State', blank=True)),
                ('rulertitle', models.CharField(max_length=30, verbose_name=b'Title (El Presidente, Czar, etc...)', blank=True)),
                ('politicalname', models.CharField(max_length=30, verbose_name=b'Country Name (Freedonia, Corruptistan...)', blank=True)),
                ('emailreports', models.BooleanField(default=True, verbose_name=b'Recieve Email Turn Reports')),
                ('emailmessages', models.BooleanField(default=True, verbose_name=b'Recieve Email Message Copy')),
                ('showcountdown', models.BooleanField(default=True, verbose_name=b'Show Countdown Timer')),
                ('paidthrough', models.DateField(null=True)),
                ('paidtype', models.IntegerField(default=0, null=True, choices=[(0, b'3 Months Basic Membership'), (1, b'6 Months Basic Membership + Tshirt'), (2, b'6 Months + UFE + Tshirt'), (3, b'Lifetime + UFE + Tshirt')])),
                ('capital', models.OneToOneField(editable=False, to='dominion.Planet')),
                ('enemies', models.ManyToManyField(related_name='enemies_rel_+', to='dominion.Player')),
                ('friends', models.ManyToManyField(related_name='friends_rel_+', to='dominion.Player')),
                ('neighbors', models.ManyToManyField(related_name='neighbors_rel_+', to='dominion.Player')),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerAttribute',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('attribute', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('Player', models.ForeignKey(to='dominion.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=20)),
                ('circular', models.BooleanField(default=False)),
                ('legs', models.TextField()),
                ('owner', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('key', models.IntegerField(serialize=False, primary_key=True)),
                ('nebulae', models.TextField(null=True, blank=True)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('controllingplayer', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TurnReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('report', models.TextField(null=True)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UpgradeAttribute',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('attribute', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('upgrade', models.ForeignKey(to='dominion.PlanetUpgrade')),
            ],
        ),
        migrations.AddField(
            model_name='planetconnection',
            name='sector',
            field=models.ForeignKey(to='dominion.Sector', null=True),
        ),
        migrations.AddField(
            model_name='planet',
            name='connections',
            field=models.ManyToManyField(to='dominion.Planet', through='dominion.PlanetConnection'),
        ),
        migrations.AddField(
            model_name='planet',
            name='foreignprices',
            field=models.ForeignKey(related_name='foreignprices', to='dominion.Manifest', null=True),
        ),
        migrations.AddField(
            model_name='planet',
            name='owner',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='planet',
            name='prices',
            field=models.ForeignKey(related_name='prices', to='dominion.Manifest', null=True),
        ),
        migrations.AddField(
            model_name='planet',
            name='resources',
            field=models.ForeignKey(to='dominion.Manifest', null=True),
        ),
        migrations.AddField(
            model_name='planet',
            name='sector',
            field=models.ForeignKey(to='dominion.Sector'),
        ),
        migrations.AddField(
            model_name='instrumentality',
            name='required',
            field=models.ForeignKey(to='dominion.Manifest'),
        ),
        migrations.AddField(
            model_name='instrumentality',
            name='requires',
            field=models.ForeignKey(blank=True, to='dominion.Instrumentality', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='destination',
            field=models.ForeignKey(related_name='destination_port', editable=False, to='dominion.Planet', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='homeport',
            field=models.ForeignKey(related_name='home_port', editable=False, to='dominion.Planet', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='inviewoffleet',
            field=models.ManyToManyField(related_name='viewable', to='dominion.Fleet'),
        ),
        migrations.AddField(
            model_name='fleet',
            name='owner',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fleet',
            name='route',
            field=models.ForeignKey(to='dominion.Route', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='sector',
            field=models.ForeignKey(editable=False, to='dominion.Sector'),
        ),
        migrations.AddField(
            model_name='fleet',
            name='source',
            field=models.ForeignKey(related_name='source_port', editable=False, to='dominion.Planet', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='sunk_cost',
            field=models.ForeignKey(related_name='sunk_cost', editable=False, to='dominion.Manifest', null=True),
        ),
        migrations.AddField(
            model_name='fleet',
            name='trade_manifest',
            field=models.ForeignKey(editable=False, to='dominion.Manifest', null=True),
        ),
    ]
