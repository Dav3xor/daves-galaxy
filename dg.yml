---
- hosts: all
  vars:
    local_user: dave
    game_hostname: davesgalaxy
    game_fqdn: davesgalaxy.com
    game_fqdntwo: www.davesgalaxy.com
    game_user: djdjango
    local_user_dir: /home/{{local_user}}
    game_user_dir: /home/{{game_user}}
  remote_user: root

  tasks:

  - name: Ensure djdjango user exists 
    user: name={{game_user}} comment="Django User" shell=/bin/bash
 
  - name: Ensure postgres user exists 
    user: name=postgres
 
  - name: ensure djdjango's .ssh directory exists
    file: path=/home/{{game_user}}/.ssh 
          state=directory mode=0700
          owner={{game_user}} 
 
  - name: Ensure ssh passwordless logins work 
    copy: src={{local_user_dir}}/.ssh/id_rsa.pub 
          dest={{game_user_dir}}/.ssh/authorized_keys
          owner={{game_user}}
          mode=600

  - name: Ensure ssh config good
    lineinfile: dest=/etc/ssh/sshd_config
                line="PermitRootLogin no"
                state=present
    lineinfile: dest=/etc/ssh/sshd_config
                line="Protocol 2"
                state=present

  - name: set up django environment variables
    lineinfile: dest=/home/{{game_user}}/.bashrc
                regexp="PYTHONPATH"
                line="export PYTHON_PATH=~/newdominion"
                state=present
    
    lineinfile: dest=/home/{{game_user}}/.bashrc
                regexp="DJANGO_SETTINGS_MODULE"
                line="export DJANGO_SETTINGS_MODULE=newdominion.settings"
                state=present

  - name: Ensure apt cache is up to date
    apt: update_cache=yes

  - name: Ensure system packages are up to date
    apt: upgrade=dist update_cache=yes

  - name: ensure system packages are installed
    apt: name={{item}} state=latest
    with_items:
      - postgresql
      - libpq-dev
      - python-psycopg2
      - redis-server
      - python-pip
      - python-dev
      - build-essential
      - libgeos-dev
      - git
      - unattended-upgrades
      - postgresql
      - libpq-dev
      - python-psycopg2
      - nginx
      - supervisor
      - postfix
      - mailutils

  - name: Ensure pip packages are installed
    pip: name={{item}} state=latest
    with_items:
      - Django
      - django-markdown-deux
      - django-markup-deprecated
      - django-registration-redux
      - markdown2
      - markup
      - MarkupSafe
      - paramiko
      - redis
      - Shapely
      - gunicorn
      - feedparser
      
  - name: install source from github
    git: repo=https://github.com/dav3xor/daves-galaxy.git
         dest=/home/{{game_user}}/newdominion
         force=yes  

  - name: ensure newdominion directory owned by djdjango
    file: path=/home/{{game_user}}/newdominion 
          state=directory mode=0700
          owner={{game_user}} 

  - name: ensure reports directory exists
    file: path=/home/{{game_user}}/newdominion/reports 
          state=directory mode=0700
          owner={{game_user}} 

  - name: copy server settings.py file
    template: src=./ansible_files/settings.py
              dest=/home/{{game_user}}/newdominion/settings.py
 
  - name: ensure supervisor config is setup for gunicorn
    template: src=./ansible_files/davesgalaxy.conf.supervisord.j2
              dest=/etc/supervisor/conf.d/davesgalaxy.conf
 
  - name: ensure supervisor config is setup for builder.py
    template: src=./ansible_files/builder.conf.supervisord.j2
              dest=/etc/supervisor/conf.d/builder.conf
 
  - name: ensure nginx configuration is set
    template: src=./ansible_files/davesgalaxy.conf.nginx.j2
             dest=/etc/nginx/sites-available/davesgalaxy.conf

  - name: set hostname
    template: src=./ansible_files/hostname.j2
              dest=/etc/hostname

  - name: ensure nginx symbolic link exists
    file: src=/etc/nginx/sites-available/davesgalaxy.conf
          dest=/etc/nginx/sites-enabled/davesgalaxy.conf
          state=link
  
  - name: galactic map cron job
    cron: name="galactic map"
          minute="0" hour="3" job="{{ local_user_dir }}/scripts/runbigmap"

  - name: prices cron job
    cron: name="market prices"
          minute="0" hour="4" job="{{ local_user_dir }}/scripts/runprices"
  
  - name: sense range cron job
    cron: name="sense range"
          minute="50" hour="3" job="{{ local_user_dir }}/scripts/runsenserange"
  
  - name: turn cron job
    cron: name="turn"
          minute="0" hour="4" job="{{ local_user_dir }}/scripts/runturn"

- hosts: all
  sudo: yes
  sudo_user: postgres
  remote_user: root
  gather_facts: no

  vars:
    dbname: dg
    dbuser: django
    dbpassword: djangopass

  tasks:
  - name: ensure database is created
    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB
     

 
- hosts: all
  remote_user: root
  
  tasks:
 
  - name: restart mail server
    service: name=postfix state=restarted
 
  - name: restart gunicorn
    supervisorctl: name="davesgalaxy" state=restarted
  
  - name: restart gunicorn
    supervisorctl: name="builder" state=restarted
   
  - name: restart nginx
    service: name=nginx state=restarted

